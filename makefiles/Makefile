# GNU Make solution makefile autogenerated by Premake
# Type "make help" for usage help

ifndef config
  config=release
endif
export config

PROJECTS := duktape duktape-hello duk dukplus test-module embed-js-module-test glue srduk duknode dukfs zlib minizip dukzip duksock dukpp-types

.PHONY: all clean help $(PROJECTS)

all: $(PROJECTS)

duktape: 
	@echo "==== Building duktape ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duktape.make

duktape-hello: duktape
	@echo "==== Building duktape-hello ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duktape-hello.make

duk: duktape
	@echo "==== Building duk ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duk.make

dukplus: duktape
	@echo "==== Building dukplus ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f dukplus.make

test-module: duktape
	@echo "==== Building test-module ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f test-module.make

embed-js-module-test: duktape
	@echo "==== Building embed-js-module-test ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f embed-js-module-test.make

glue: 
	@echo "==== Building glue ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f glue.make

srduk: duktape
	@echo "==== Building srduk ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f srduk.make

duknode: duktape
	@echo "==== Building duknode ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duknode.make

dukfs: duktape
	@echo "==== Building dukfs ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f dukfs.make

zlib: 
	@echo "==== Building zlib ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f zlib.make

minizip: 
	@echo "==== Building minizip ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f minizip.make

dukzip: duktape minizip zlib
	@echo "==== Building dukzip ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f dukzip.make

duksock: duktape
	@echo "==== Building duksock ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f duksock.make

dukpp-types: duktape
	@echo "==== Building dukpp-types ($(config)) ===="
	@${MAKE} --no-print-directory -C . -f dukpp-types.make

clean:
	@${MAKE} --no-print-directory -C . -f duktape.make clean
	@${MAKE} --no-print-directory -C . -f duktape-hello.make clean
	@${MAKE} --no-print-directory -C . -f duk.make clean
	@${MAKE} --no-print-directory -C . -f dukplus.make clean
	@${MAKE} --no-print-directory -C . -f test-module.make clean
	@${MAKE} --no-print-directory -C . -f embed-js-module-test.make clean
	@${MAKE} --no-print-directory -C . -f glue.make clean
	@${MAKE} --no-print-directory -C . -f srduk.make clean
	@${MAKE} --no-print-directory -C . -f duknode.make clean
	@${MAKE} --no-print-directory -C . -f dukfs.make clean
	@${MAKE} --no-print-directory -C . -f zlib.make clean
	@${MAKE} --no-print-directory -C . -f minizip.make clean
	@${MAKE} --no-print-directory -C . -f dukzip.make clean
	@${MAKE} --no-print-directory -C . -f duksock.make clean
	@${MAKE} --no-print-directory -C . -f dukpp-types.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "   release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   duktape"
	@echo "   duktape-hello"
	@echo "   duk"
	@echo "   dukplus"
	@echo "   test-module"
	@echo "   embed-js-module-test"
	@echo "   glue"
	@echo "   srduk"
	@echo "   duknode"
	@echo "   dukfs"
	@echo "   zlib"
	@echo "   minizip"
	@echo "   dukzip"
	@echo "   duksock"
	@echo "   dukpp-types"
	@echo ""
	@echo "For more information, see http://industriousone.com/premake/quick-start"
